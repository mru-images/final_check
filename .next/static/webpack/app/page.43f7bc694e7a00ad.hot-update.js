"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MusicPlayerApp; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! __barrel_optimize__?names=Home,Search,Settings!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/home.js\");\n/* harmony import */ var _barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! __barrel_optimize__?names=Home,Search,Settings!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/search.js\");\n/* harmony import */ var _barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! __barrel_optimize__?names=Home,Search,Settings!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/settings.js\");\n/* harmony import */ var _components_HomePage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/HomePage */ \"(app-pages-browser)/./components/HomePage.tsx\");\n/* harmony import */ var _components_SearchPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/SearchPage */ \"(app-pages-browser)/./components/SearchPage.tsx\");\n/* harmony import */ var _components_SettingsPage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/SettingsPage */ \"(app-pages-browser)/./components/SettingsPage.tsx\");\n/* harmony import */ var _components_PlaylistsPage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/PlaylistsPage */ \"(app-pages-browser)/./components/PlaylistsPage.tsx\");\n/* harmony import */ var _components_LikedSongsPage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/LikedSongsPage */ \"(app-pages-browser)/./components/LikedSongsPage.tsx\");\n/* harmony import */ var _components_MinimizedPlayer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/MinimizedPlayer */ \"(app-pages-browser)/./components/MinimizedPlayer.tsx\");\n/* harmony import */ var _components_MaximizedPlayer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/components/MaximizedPlayer */ \"(app-pages-browser)/./components/MaximizedPlayer.tsx\");\n/* harmony import */ var _components_CreatePlaylistModal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/components/CreatePlaylistModal */ \"(app-pages-browser)/./components/CreatePlaylistModal.tsx\");\n/* harmony import */ var _components_AddToPlaylistModal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/components/AddToPlaylistModal */ \"(app-pages-browser)/./components/AddToPlaylistModal.tsx\");\n/* harmony import */ var _components_AuthWrapper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/components/AuthWrapper */ \"(app-pages-browser)/./components/AuthWrapper.tsx\");\n/* harmony import */ var _components_SleepTimerModal__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/components/SleepTimerModal */ \"(app-pages-browser)/./components/SleepTimerModal.tsx\");\n/* harmony import */ var _hooks_useAuth__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @/hooks/useAuth */ \"(app-pages-browser)/./hooks/useAuth.ts\");\n/* harmony import */ var _hooks_useSupabaseData__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @/hooks/useSupabaseData */ \"(app-pages-browser)/./hooks/useSupabaseData.ts\");\n/* harmony import */ var _hooks_useQueue__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @/hooks/useQueue */ \"(app-pages-browser)/./hooks/useQueue.ts\");\n/* harmony import */ var _hooks_useSleepTimer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @/hooks/useSleepTimer */ \"(app-pages-browser)/./hooks/useSleepTimer.ts\");\n/* harmony import */ var _components_ThemeContext__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @/components/ThemeContext */ \"(app-pages-browser)/./components/ThemeContext.tsx\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction MusicPlayerContent() {\n    _s();\n    const { user } = (0,_hooks_useAuth__WEBPACK_IMPORTED_MODULE_13__.useAuth)();\n    const { songs, playlists, likedSongs, lastPlayedSong, loading, toggleLike, createPlaylist, deletePlaylist, renamePlaylist, addSongToPlaylist, removeSongFromPlaylist, recordListeningHistory, stopCurrentSongTracking, getPersonalizedSongs, getSmartPersonalizedSongs } = (0,_hooks_useSupabaseData__WEBPACK_IMPORTED_MODULE_14__.useSupabaseData)(user);\n    const { queue, addToQueue, removeFromQueue, getNextSongFromQueue, clearQueue, hasQueue } = (0,_hooks_useQueue__WEBPACK_IMPORTED_MODULE_15__.useQueue)();\n    const [activeTab, setActiveTab] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"home\");\n    const [currentPage, setCurrentPage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"main\");\n    const [currentSong, setCurrentSong] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isPlayerMaximized, setIsPlayerMaximized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showCreatePlaylistModal, setShowCreatePlaylistModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showAddToPlaylistModal, setShowAddToPlaylistModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showSleepTimerModal, setShowSleepTimerModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedSongForPlaylist, setSelectedSongForPlaylist] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [hasSetLastPlayedSong, setHasSetLastPlayedSong] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [lastPlayedSongDismissed, setLastPlayedSongDismissed] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { isDarkMode, toggleTheme } = (0,_components_ThemeContext__WEBPACK_IMPORTED_MODULE_17__.useTheme)();\n    const [displayCount, setDisplayCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(15);\n    const [imageUrls, setImageUrls] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [audioUrl, setAudioUrl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const audioRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [currentTime, setCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [duration, setDuration] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [volume, setVolume] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0.75); // default 75%\n    const [isSeeking, setIsSeeking] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [pendingSeekTime, setPendingSeekTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isExternallySeeking, setIsExternallySeeking] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [recommendedQueue, setRecommendedQueue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [playedSongs, setPlayedSongs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Set());\n    const [personalizedList, setPersonalizedList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentSongIndex, setCurrentSongIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [listenedSongs, setListenedSongs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Set());\n    const [isFetchingMore, setIsFetchingMore] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Smart recommendation system state\n    const [currentBatchListenedSongs, setCurrentBatchListenedSongs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [songStartTime, setSongStartTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [batchStartIndex, setBatchStartIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // Shuffle and repeat state\n    const [isShuffleEnabled, setIsShuffleEnabled] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true); // Shuffle on by default\n    const [repeatMode, setRepeatMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"off\");\n    // Sleep timer\n    const { sleepTimer, remainingTime, startTimer, cancelTimer, triggerAfterSongTimer, isActive: isSleepTimerActive } = (0,_hooks_useSleepTimer__WEBPACK_IMPORTED_MODULE_16__.useSleepTimer)();\n    const loadMoreSongs = ()=>{\n        setDisplayCount((prev)=>prev + 15);\n    };\n    const displayedSongs = songs.slice(0, displayCount);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadAudio = async ()=>{\n            if (currentSong === null || currentSong === void 0 ? void 0 : currentSong.file_id) {\n                const url = \"/api/audio-proxy?fileid=\".concat(currentSong.file_id);\n                setAudioUrl(url);\n                setDuration(0);\n                setCurrentTime(0);\n                setPendingSeekTime(null);\n            }\n        };\n        loadAudio();\n    }, [\n        currentSong === null || currentSong === void 0 ? void 0 : currentSong.file_id\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (audioRef.current) {\n            audioRef.current.volume = volume;\n        }\n    }, [\n        volume\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const audio = audioRef.current;\n        if (!audio) return;\n        if (!isNaN(audio.duration) && isPlaying) {\n            // Duration is valid, safe to play\n            audio.play().catch((e)=>{\n                console.error(\"Playback error:\", e);\n            });\n        } else if (!isPlaying) {\n            audio.pause();\n        }\n    }, [\n        isPlaying\n    ]);\n    // Load images for currently displayed songs\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchImages = async ()=>{\n            const newUrls = {};\n            // Songs from the main feed\n            const songsToLoad = songs.slice(0, displayCount);\n            for (const song of songsToLoad){\n                if (!imageUrls[song.id]) {\n                    newUrls[song.id] = \"/api/image-proxy?fileid=\".concat(song.img_id);\n                }\n            }\n            // Songs from playlists\n            for (const playlist of playlists){\n                for (const song of playlist.songs){\n                    if (!imageUrls[song.id]) {\n                        newUrls[song.id] = \"/api/image-proxy?fileid=\".concat(song.img_id);\n                    }\n                }\n            }\n            // Liked songs\n            for (const song of likedSongs){\n                if (!imageUrls[song.id]) {\n                    newUrls[song.id] = \"/api/image-proxy?fileid=\".concat(song.img_id);\n                }\n            }\n            // Apply if new URLs found\n            if (Object.keys(newUrls).length > 0) {\n                setImageUrls((prev)=>({\n                        ...prev,\n                        ...newUrls\n                    }));\n            }\n        };\n        fetchImages();\n    }, [\n        displayCount,\n        songs,\n        playlists,\n        likedSongs\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83C\\uDFB5 personalizedList updated:\", personalizedList);\n    }, [\n        personalizedList\n    ]);\n    // Set last played song as current song when data loads (only once and if not dismissed)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadLastPlayedImage = async ()=>{\n            if (user && lastPlayedSong && !hasSetLastPlayedSong && !lastPlayedSongDismissed) {\n                try {\n                    console.log(\"\\uD83C\\uDFB5 Loading initial personalized songs for last played song\");\n                    const initialRecs = await getPersonalizedSongs(user.id, lastPlayedSong, listenedSongs);\n                    const filtered = initialRecs.filter((song)=>!playedSongs.has(song.file_id.toString()));\n                    const newPersonalizedList = [\n                        lastPlayedSong,\n                        ...filtered.slice(0, 4)\n                    ];\n                    setPersonalizedList(newPersonalizedList);\n                    console.log(\"✅ Initial personalized list set:\", newPersonalizedList.length, \"songs\");\n                } catch (error) {\n                    console.error(\"❌ Error loading initial personalized songs:\", error);\n                    setPersonalizedList([\n                        lastPlayedSong\n                    ]);\n                }\n                setCurrentSong(lastPlayedSong);\n                setHasSetLastPlayedSong(true);\n                // Add to listened songs and log\n                setListenedSongs((prev)=>{\n                    const newSet = new Set(prev);\n                    newSet.add(lastPlayedSong.file_id.toString());\n                    console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                    return newSet;\n                });\n                if (!imageUrls[lastPlayedSong.img_id]) {\n                    const url = \"/api/image-proxy?fileid=\".concat(lastPlayedSong.img_id);\n                    setImageUrls((prev)=>({\n                            ...prev,\n                            [lastPlayedSong.img_id]: url\n                        }));\n                }\n            }\n        };\n        loadLastPlayedImage();\n    }, [\n        lastPlayedSong,\n        hasSetLastPlayedSong,\n        lastPlayedSongDismissed,\n        user,\n        getPersonalizedSongs\n    ]);\n    const handleSongPlay = async (song)=>{\n        // Record if previous song was listened to (>20 seconds)\n        if (currentSong && songStartTime) {\n            const listenDuration = (new Date().getTime() - songStartTime.getTime()) / 1000;\n            if (listenDuration > 20) {\n                console.log('✅ User listened to \"'.concat(currentSong.name, '\" for ').concat(listenDuration.toFixed(1), \" seconds\"));\n                setCurrentBatchListenedSongs((prev)=>{\n                    const exists = prev.some((s)=>s.file_id === currentSong.file_id);\n                    if (!exists) {\n                        const updated = [\n                            ...prev,\n                            currentSong\n                        ];\n                        console.log(\"\\uD83C\\uDFB5 Current batch listened songs:\", updated.map((s)=>s.name));\n                        return updated;\n                    }\n                    return prev;\n                });\n            } else {\n                console.log('⏭️ User skipped \"'.concat(currentSong.name, '\" after ').concat(listenDuration.toFixed(1), \" seconds\"));\n            }\n        }\n        setCurrentSong(song);\n        setIsPlaying(true);\n        setLastPlayedSongDismissed(false);\n        recordListeningHistory(song.id);\n        setSongStartTime(new Date()); // Track when this song started\n        // Add to listened songs and log\n        setListenedSongs((prev)=>{\n            const newSet = new Set(prev);\n            newSet.add(song.file_id.toString());\n            console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n            return newSet;\n        });\n        setPlayedSongs((prev)=>{\n            const updated = new Set(prev);\n            updated.add(song.file_id.toString());\n            return updated;\n        });\n        if (user) {\n            try {\n                console.log(\"\\uD83C\\uDFB5 Fetching personalized songs for:\", song.name);\n                const recs = await getPersonalizedSongs(user.id, song, listenedSongs);\n                const filtered = recs.filter((s)=>!playedSongs.has(s.file_id.toString()));\n                const newPersonalizedList = [\n                    song,\n                    ...filtered.slice(0, 4)\n                ];\n                setPersonalizedList(newPersonalizedList);\n                setCurrentSongIndex(0);\n                setBatchStartIndex(0);\n                setCurrentBatchListenedSongs([]); // Reset batch for new song selection\n                console.log(\"✅ New personalized list set:\", newPersonalizedList.length, \"songs\");\n            } catch (error) {\n                console.error(\"❌ Error fetching personalized songs:\", error);\n                setPersonalizedList([\n                    song\n                ]);\n                setCurrentSongIndex(0);\n                setBatchStartIndex(0);\n                setCurrentBatchListenedSongs([]);\n            }\n        }\n    };\n    const handleAddToQueue = (song)=>{\n        addToQueue(song);\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_18__.toast.success('Added \"'.concat(song.name, '\" to queue'));\n    };\n    const togglePlay = ()=>{\n        setIsPlaying(!isPlaying);\n    };\n    const togglePlayerSize = ()=>{\n        setIsPlayerMaximized(!isPlayerMaximized);\n    };\n    const closePlayer = async ()=>{\n        // Stop tracking current song before closing\n        await stopCurrentSongTracking();\n        setCurrentSong(null);\n        setIsPlaying(false);\n        setIsPlayerMaximized(false);\n        // Mark last played song as dismissed so it won't auto-load again\n        setLastPlayedSongDismissed(true);\n    };\n    const handleToggleLike = (songId)=>{\n        toggleLike(songId);\n        // Update current song state if it's the one being liked/unliked\n        if (currentSong && currentSong.id === songId) {\n            setCurrentSong((prev)=>prev ? {\n                    ...prev,\n                    isLiked: !prev.isLiked\n                } : null);\n        }\n    };\n    const handlePrevious = ()=>{\n        // Record if current song was listened to before going to previous\n        if (currentSong && songStartTime) {\n            const listenDuration = (new Date().getTime() - songStartTime.getTime()) / 1000;\n            if (listenDuration > 20) {\n                console.log('✅ User listened to \"'.concat(currentSong.name, '\" for ').concat(listenDuration.toFixed(1), \" seconds\"));\n                setCurrentBatchListenedSongs((prev)=>{\n                    const exists = prev.some((s)=>s.file_id === currentSong.file_id);\n                    if (!exists) {\n                        const updated = [\n                            ...prev,\n                            currentSong\n                        ];\n                        console.log(\"\\uD83C\\uDFB5 Current batch listened songs:\", updated.map((s)=>s.name));\n                        return updated;\n                    }\n                    return prev;\n                });\n            }\n        }\n        if (!currentSong) return;\n        // Check if there's a previous song in the personalized list\n        if (currentSongIndex > 0) {\n            const prevIndex = currentSongIndex - 1;\n            const prevSong = personalizedList[prevIndex];\n            if (prevSong) {\n                setCurrentSong(prevSong);\n                setCurrentSongIndex(prevIndex);\n                setIsPlaying(true);\n                setLastPlayedSongDismissed(false);\n                recordListeningHistory(prevSong.id);\n                setSongStartTime(new Date());\n                // Add to listened songs and log\n                setListenedSongs((prev)=>{\n                    const newSet = new Set(prev);\n                    newSet.add(prevSong.file_id.toString());\n                    console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                    return newSet;\n                });\n                setPlayedSongs((prev)=>{\n                    const updated = new Set(prev);\n                    updated.add(prevSong.file_id.toString());\n                    return updated;\n                });\n                // Preload image\n                if (!imageUrls[prevSong.img_id]) {\n                    const newUrl = \"/api/image-proxy?fileid=\".concat(prevSong.img_id);\n                    setImageUrls((prev)=>({\n                            ...prev,\n                            [prevSong.img_id]: newUrl\n                        }));\n                }\n            }\n        } else {\n            // If at the beginning, just restart current song\n            setCurrentTime(0);\n            setIsPlaying(true);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!currentSong) return;\n        const currentIndex = songs.findIndex((song)=>song.id === currentSong.id);\n        const nextIndex = currentIndex < songs.length - 1 ? currentIndex + 1 : 0;\n        const nextSong = songs[nextIndex];\n        // Preload next song image if not in cache\n        if (nextSong && !imageUrls[nextSong.img_id]) {\n            const newUrl = \"/api/image-proxy?fileid=\".concat(nextSong.img_id);\n            setImageUrls((prev)=>({\n                    ...prev,\n                    [nextSong.img_id]: newUrl\n                }));\n        }\n    }, [\n        currentSong,\n        songs\n    ]);\n    const handleLoadedMetadata = async ()=>{\n        const audio = audioRef.current;\n        if (!audio) return;\n        const loadedDuration = audio.duration;\n        if (!isNaN(loadedDuration) && isFinite(loadedDuration)) {\n            setDuration(loadedDuration);\n            if (pendingSeekTime !== null) {\n                audio.currentTime = pendingSeekTime;\n                setCurrentTime(pendingSeekTime);\n                setPendingSeekTime(null);\n            } else {\n                setCurrentTime(audio.currentTime);\n            }\n            try {\n                if (isPlaying) {\n                    await audio.play();\n                }\n            } catch (err) {\n                console.error(\"Auto-play error after metadata load:\", err);\n            }\n        } else {\n            // Retry metadata read\n            setTimeout(handleLoadedMetadata, 100);\n        }\n    };\n    const handleNext = async ()=>{\n        // Record if current song was listened to before going to next\n        if (currentSong && songStartTime) {\n            const listenDuration = (new Date().getTime() - songStartTime.getTime()) / 1000;\n            if (listenDuration > 20) {\n                console.log('✅ User listened to \"'.concat(currentSong.name, '\" for ').concat(listenDuration.toFixed(1), \" seconds\"));\n                setCurrentBatchListenedSongs((prev)=>{\n                    const exists = prev.some((s)=>s.file_id === currentSong.file_id);\n                    if (!exists) {\n                        const updated = [\n                            ...prev,\n                            currentSong\n                        ];\n                        console.log(\"\\uD83C\\uDFB5 Current batch listened songs:\", updated.map((s)=>s.name));\n                        return updated;\n                    }\n                    return prev;\n                });\n            } else {\n                console.log('⏭️ User skipped \"'.concat(currentSong.name, '\" after ').concat(listenDuration.toFixed(1), \" seconds\"));\n            }\n        }\n        if (!currentSong) return;\n        // Check if there's a song in the queue first\n        const nextQueueSong = getNextSongFromQueue();\n        if (nextQueueSong) {\n            setCurrentSong(nextQueueSong);\n            setIsPlaying(true);\n            setLastPlayedSongDismissed(false);\n            recordListeningHistory(nextQueueSong.id);\n            setSongStartTime(new Date());\n            // Add to listened songs and log\n            setListenedSongs((prev)=>{\n                const newSet = new Set(prev);\n                newSet.add(nextQueueSong.file_id.toString());\n                console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                return newSet;\n            });\n            // Update personalized list with the queue song\n            if (user) {\n                const recs = await getPersonalizedSongs(user.id, nextQueueSong, listenedSongs);\n                const filtered = recs.filter((s)=>!playedSongs.has(s.file_id));\n                const newPersonalizedList = [\n                    nextQueueSong,\n                    ...filtered.slice(0, 4)\n                ];\n                setPersonalizedList(newPersonalizedList);\n                setCurrentSongIndex(0);\n            }\n            // Preload image\n            if (!imageUrls[nextQueueSong.img_id]) {\n                const newUrl = \"/api/image-proxy?fileid=\".concat(nextQueueSong.img_id);\n                setImageUrls((prev)=>({\n                        ...prev,\n                        [nextQueueSong.img_id]: newUrl\n                    }));\n            }\n            return;\n        }\n        // Check if we're at the second-to-last song and need to fetch smart recommendations\n        if (currentSongIndex === personalizedList.length - 2 && !isFetchingMore && user && currentSong) {\n            console.log(\"\\uD83E\\uDDE0 At second-to-last song, checking for smart recommendations...\");\n            setIsFetchingMore(true);\n            try {\n                let newRecs = [];\n                // If we have songs that user actually listened to in current batch, use smart recommendations\n                if (currentBatchListenedSongs.length > 0) {\n                    console.log(\"\\uD83E\\uDDE0 Using smart recommendations based on listened songs\");\n                    newRecs = await getSmartPersonalizedSongs(user.id, currentBatchListenedSongs, new Set([\n                        ...Array.from(listenedSongs),\n                        ...personalizedList.map((s)=>s.file_id.toString())\n                    ]));\n                } else {\n                    console.log(\"\\uD83C\\uDFB5 No listened songs in batch, using regular recommendations\");\n                    newRecs = await getPersonalizedSongs(user.id, currentSong, listenedSongs);\n                }\n                const filtered = newRecs.filter((song)=>!playedSongs.has(song.file_id.toString()) && !listenedSongs.has(song.file_id.toString()) && !personalizedList.some((existing)=>existing.file_id === song.file_id));\n                if (filtered.length > 0) {\n                    setPersonalizedList((prev)=>[\n                            ...prev,\n                            ...filtered.slice(0, 5)\n                        ]);\n                    console.log(\"✅ Added\", filtered.slice(0, 5).length, \"smart recommendations to personalized list\");\n                }\n            } catch (error) {\n                console.error(\"❌ Error fetching smart recommendations:\", error);\n            } finally{\n                setIsFetchingMore(false);\n            }\n        }\n        // If no queue, proceed with personalized list\n        const nextIndex = currentSongIndex + 1;\n        if (nextIndex < personalizedList.length) {\n            const nextSong = personalizedList[nextIndex];\n            setCurrentSong(nextSong);\n            setCurrentSongIndex(nextIndex);\n            setIsPlaying(true);\n            setLastPlayedSongDismissed(false);\n            recordListeningHistory(nextSong.id);\n            setSongStartTime(new Date());\n            // Add to listened songs and log\n            setListenedSongs((prev)=>{\n                const newSet = new Set(prev);\n                newSet.add(nextSong.file_id.toString());\n                console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                return newSet;\n            });\n            setPlayedSongs((prev)=>{\n                const updated = new Set(prev);\n                updated.add(String(nextSong.file_id));\n                return updated;\n            });\n            // Preload image\n            if (!imageUrls[nextSong.img_id]) {\n                const newUrl = \"/api/image-proxy?fileid=\".concat(nextSong.img_id);\n                setImageUrls((prev)=>({\n                        ...prev,\n                        [nextSong.img_id]: newUrl\n                    }));\n            }\n        } else {\n            // If we've reached the end of personalized list, get new smart recommendations\n            if (user && currentSong) {\n                try {\n                    console.log(\"\\uD83E\\uDDE0 Reached end of list, fetching new smart recommendations\");\n                    let newRecs = [];\n                    // Use smart recommendations if we have listened songs in current batch\n                    if (currentBatchListenedSongs.length > 0) {\n                        console.log(\"\\uD83E\\uDDE0 Using smart recommendations for new batch\");\n                        newRecs = await getSmartPersonalizedSongs(user.id, currentBatchListenedSongs, listenedSongs);\n                    } else {\n                        console.log(\"\\uD83C\\uDFB5 Using regular recommendations for new batch\");\n                        newRecs = await getPersonalizedSongs(user.id, currentSong, listenedSongs);\n                    }\n                    const filtered = newRecs.filter((song)=>!playedSongs.has(song.file_id.toString()) && !listenedSongs.has(song.file_id.toString()));\n                    if (filtered.length > 0) {\n                        const nextSong = filtered[0];\n                        setCurrentSong(nextSong);\n                        setIsPlaying(true);\n                        setLastPlayedSongDismissed(false);\n                        recordListeningHistory(nextSong.id);\n                        setSongStartTime(new Date());\n                        // Add to listened songs and log\n                        setListenedSongs((prev)=>{\n                            const newSet = new Set(prev);\n                            newSet.add(nextSong.file_id.toString());\n                            console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                            return newSet;\n                        });\n                        // Create new personalized list starting with this song\n                        const newPersonalizedList = [\n                            nextSong,\n                            ...filtered.slice(1, 5)\n                        ];\n                        setPersonalizedList(newPersonalizedList);\n                        setCurrentSongIndex(0);\n                        setBatchStartIndex(0);\n                        setCurrentBatchListenedSongs([]); // Reset batch for new recommendations\n                        setPlayedSongs((prev)=>{\n                            const updated = new Set(prev);\n                            updated.add(nextSong.file_id.toString());\n                            return updated;\n                        });\n                        // Preload image\n                        if (!imageUrls[nextSong.img_id]) {\n                            const newUrl = \"/api/image-proxy?fileid=\".concat(nextSong.img_id);\n                            setImageUrls((prev)=>({\n                                    ...prev,\n                                    [nextSong.img_id]: newUrl\n                                }));\n                        }\n                        console.log(\"✅ New smart recommendations loaded:\", newPersonalizedList.length, \"songs\");\n                    } else {\n                        console.warn(\"⚠️ No more smart recommendations available\");\n                    }\n                } catch (error) {\n                    console.error(\"❌ Error fetching new smart recommendations:\", error);\n                }\n            }\n        }\n    };\n    const formatNumber = (num)=>{\n        if (num >= 1000000) {\n            return (num / 1000000).toFixed(1) + \"M\";\n        } else if (num >= 1000) {\n            return (num / 1000).toFixed(1) + \"K\";\n        }\n        return num.toString();\n    };\n    const handleAddToPlaylist = (song)=>{\n        setSelectedSongForPlaylist(song);\n        setShowAddToPlaylistModal(true);\n    };\n    const handleSongEnd = async ()=>{\n        // Check if sleep timer is set to \"after-song\" and trigger it\n        if (sleepTimer === \"after-song\") {\n            triggerAfterSongTimer();\n            return;\n        }\n        // Record if song was listened to completely (assume >20 seconds if it ended naturally)\n        if (currentSong && songStartTime) {\n            const listenDuration = (new Date().getTime() - songStartTime.getTime()) / 1000;\n            console.log('\\uD83C\\uDFB5 Song \"'.concat(currentSong.name, '\" ended after ').concat(listenDuration.toFixed(1), \" seconds\"));\n            if (listenDuration > 20) {\n                setCurrentBatchListenedSongs((prev)=>{\n                    const exists = prev.some((s)=>s.file_id === currentSong.file_id);\n                    if (!exists) {\n                        const updated = [\n                            ...prev,\n                            currentSong\n                        ];\n                        console.log(\"\\uD83C\\uDFB5 Current batch listened songs:\", updated.map((s)=>s.name));\n                        return updated;\n                    }\n                    return prev;\n                });\n            }\n        }\n        // Handle repeat modes\n        if (repeatMode === \"once\" || repeatMode === \"infinite\") {\n            // Restart the current song\n            setCurrentTime(0);\n            setIsPlaying(true);\n            setSongStartTime(new Date());\n            // If repeat once, turn off repeat after playing once\n            if (repeatMode === \"once\") {\n                setRepeatMode(\"off\");\n            }\n            return;\n        }\n        // When a song ends, automatically play the next one\n        await handleNext();\n    };\n    const handleSleepTimerSet = (minutes)=>{\n        if (minutes === null) {\n            cancelTimer();\n        } else {\n            startTimer(minutes, ()=>{\n                setIsPlaying(false);\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_18__.toast.success(\"Sleep timer ended - music stopped\");\n            });\n            if (typeof minutes === \"number\") {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_18__.toast.success(\"Sleep timer set for \".concat(minutes, \" minutes\"));\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_18__.toast.success(\"Sleep timer set to stop after current song\");\n            }\n        }\n    };\n    const renderContent = ()=>{\n        if (currentPage === \"playlists\") {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_PlaylistsPage__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                playlists: playlists,\n                onBack: ()=>setCurrentPage(\"main\"),\n                onSongPlay: handleSongPlay,\n                onAddToQueue: handleAddToQueue,\n                onCreatePlaylist: ()=>setShowCreatePlaylistModal(true),\n                onDeletePlaylist: deletePlaylist,\n                onRenamePlaylist: renamePlaylist,\n                onRemoveSongFromPlaylist: removeSongFromPlaylist,\n                imageUrls: imageUrls\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 709,\n                columnNumber: 9\n            }, this);\n        }\n        if (currentPage === \"liked\") {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_LikedSongsPage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                songs: likedSongs,\n                onBack: ()=>setCurrentPage(\"main\"),\n                onSongPlay: handleSongPlay,\n                onAddToQueue: handleAddToQueue,\n                imageUrls: imageUrls\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 724,\n                columnNumber: 14\n            }, this);\n        }\n        switch(activeTab){\n            case \"home\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_HomePage__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    songs: displayedSongs,\n                    onSongPlay: handleSongPlay,\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: handleAddToPlaylist,\n                    onAddToQueue: handleAddToQueue,\n                    imageUrls: imageUrls,\n                    onLoadMore: loadMoreSongs,\n                    hasMoreSongs: displayCount < songs.length\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 729,\n                    columnNumber: 16\n                }, this);\n            case \"search\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SearchPage__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    songs: songs,\n                    onSongPlay: handleSongPlay,\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: handleAddToPlaylist,\n                    onAddToQueue: handleAddToQueue,\n                    imageUrls: imageUrls,\n                    setImageUrls: setImageUrls\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 740,\n                    columnNumber: 16\n                }, this);\n            case \"settings\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SettingsPage__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    onPlaylistsClick: ()=>setCurrentPage(\"playlists\"),\n                    onLikedClick: ()=>setCurrentPage(\"liked\")\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 750,\n                    columnNumber: 16\n                }, this);\n            default:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_HomePage__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    songs: displayedSongs,\n                    onSongPlay: handleSongPlay,\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: handleAddToPlaylist,\n                    onAddToQueue: handleAddToQueue,\n                    imageUrls: imageUrls,\n                    onLoadMore: loadMoreSongs,\n                    hasMoreSongs: displayCount < songs.length\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 752,\n                    columnNumber: 16\n                }, this);\n        }\n    };\n    const themeClasses = isDarkMode ? \"bg-gray-900 text-white\" : \"bg-gray-50 text-gray-900\";\n    const setCurrentTimeState = setCurrentTime;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen \".concat(themeClasses, \" relative overflow-hidden\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"transition-all duration-300 \".concat(currentSong ? \"pb-36\" : \"pb-20\"),\n                children: renderContent()\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 774,\n                columnNumber: 9\n            }, this),\n            currentPage === \"main\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed bottom-0 left-0 right-0 \".concat(isDarkMode ? \"bg-gray-800 border-gray-700\" : \"bg-white border-gray-200\", \" border-t z-30\"),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center justify-around py-3\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setActiveTab(\"home\"),\n                            className: \"flex flex-col items-center space-y-1 p-2 transition-colors \".concat(activeTab === \"home\" ? \"text-purple-400\" : isDarkMode ? \"text-gray-400\" : \"text-gray-600\"),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n                                    size: 24\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 788,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xs\",\n                                    children: \"Home\"\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 789,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/project/app/page.tsx\",\n                            lineNumber: 782,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setActiveTab(\"search\"),\n                            className: \"flex flex-col items-center space-y-1 p-2 transition-colors \".concat(activeTab === \"search\" ? \"text-purple-400\" : isDarkMode ? \"text-gray-400\" : \"text-gray-600\"),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n                                    size: 24\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 797,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xs\",\n                                    children: \"Search\"\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 798,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/project/app/page.tsx\",\n                            lineNumber: 791,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setActiveTab(\"settings\"),\n                            className: \"flex flex-col items-center space-y-1 p-2 transition-colors \".concat(activeTab === \"settings\" ? \"text-purple-400\" : isDarkMode ? \"text-gray-400\" : \"text-gray-600\"),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n                                    size: 24\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 806,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xs\",\n                                    children: \"Settings\"\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 807,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/project/app/page.tsx\",\n                            lineNumber: 800,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 781,\n                    columnNumber: 13\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 780,\n                columnNumber: 11\n            }, this),\n            currentSong && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: !isPlayerMaximized ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MinimizedPlayer__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                    song: currentSong,\n                    isPlaying: isPlaying,\n                    imageUrl: imageUrls[currentSong.img_id],\n                    onTogglePlay: togglePlay,\n                    onMaximize: togglePlayerSize,\n                    onPrevious: handlePrevious,\n                    onNext: handleNext,\n                    onClose: closePlayer,\n                    onToggleLike: ()=>handleToggleLike(currentSong.id),\n                    formatNumber: formatNumber,\n                    currentTime: currentTime,\n                    duration: duration\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 817,\n                    columnNumber: 15\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MaximizedPlayer__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                    song: currentSong,\n                    isPlaying: isPlaying,\n                    imageUrl: imageUrls[currentSong.img_id],\n                    onTogglePlay: togglePlay,\n                    onMinimize: togglePlayerSize,\n                    onPrevious: handlePrevious,\n                    onNext: handleNext,\n                    onToggleLike: ()=>handleToggleLike(currentSong.id),\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: ()=>handleAddToPlaylist(currentSong),\n                    currentTime: currentTime,\n                    duration: duration,\n                    setCurrentTime: (seekTime)=>{\n                        if (audioRef.current && !isNaN(audioRef.current.duration)) {\n                            setIsExternallySeeking(true);\n                            audioRef.current.currentTime = seekTime;\n                            setCurrentTimeState(seekTime);\n                            setTimeout(()=>setIsExternallySeeking(false), 200);\n                        } else {\n                            setPendingSeekTime(seekTime); // Will apply onLoadedMetadata\n                        }\n                    },\n                    volume: volume,\n                    setVolume: setVolume,\n                    isSeeking: isSeeking,\n                    setIsSeeking: setIsSeeking,\n                    queue: queue,\n                    onRemoveFromQueue: removeFromQueue,\n                    onSongPlay: handleSongPlay,\n                    imageUrls: imageUrls,\n                    isShuffleEnabled: isShuffleEnabled,\n                    setIsShuffleEnabled: setIsShuffleEnabled,\n                    repeatMode: repeatMode,\n                    setRepeatMode: setRepeatMode,\n                    sleepTimer: sleepTimer,\n                    remainingTime: remainingTime,\n                    onOpenSleepTimer: ()=>setShowSleepTimerModal(true)\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 832,\n                    columnNumber: 15\n                }, this)\n            }, void 0, false),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CreatePlaylistModal__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                isOpen: showCreatePlaylistModal,\n                onClose: ()=>setShowCreatePlaylistModal(false),\n                onCreatePlaylist: createPlaylist\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 880,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AddToPlaylistModal__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                isOpen: showAddToPlaylistModal,\n                onClose: ()=>{\n                    setShowAddToPlaylistModal(false);\n                    setSelectedSongForPlaylist(null);\n                },\n                song: selectedSongForPlaylist,\n                playlists: playlists,\n                onAddToPlaylist: addSongToPlaylist,\n                onCreatePlaylist: ()=>{\n                    setShowAddToPlaylistModal(false);\n                    setShowCreatePlaylistModal(true);\n                },\n                imageUrls: imageUrls,\n                setImageUrls: setImageUrls\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 886,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SleepTimerModal__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                isOpen: showSleepTimerModal,\n                onClose: ()=>setShowSleepTimerModal(false),\n                onSetTimer: handleSleepTimerSet,\n                currentTimer: sleepTimer\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 903,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                ref: audioRef,\n                src: audioUrl !== null && audioUrl !== void 0 ? audioUrl : undefined,\n                onEnded: handleSongEnd,\n                onTimeUpdate: ()=>{\n                    if (audioRef.current && !isSeeking && !isExternallySeeking) {\n                        const current = audioRef.current.currentTime;\n                        // Only update state if the difference is significant\n                        if (Math.abs(currentTime - current) > 0.25) {\n                            setCurrentTime(current);\n                        }\n                    }\n                },\n                onLoadedMetadata: handleLoadedMetadata,\n                onVolumeChange: ()=>{\n                    if (audioRef.current) {\n                        setVolume(audioRef.current.volume);\n                    }\n                },\n                style: {\n                    display: \"none\"\n                }\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 909,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/project/app/page.tsx\",\n        lineNumber: 772,\n        columnNumber: 7\n    }, this);\n}\n_s(MusicPlayerContent, \"ulvuDtmfZxLNrP7yqfK3rao0ylQ=\", false, function() {\n    return [\n        _hooks_useAuth__WEBPACK_IMPORTED_MODULE_13__.useAuth,\n        _hooks_useSupabaseData__WEBPACK_IMPORTED_MODULE_14__.useSupabaseData,\n        _hooks_useQueue__WEBPACK_IMPORTED_MODULE_15__.useQueue,\n        _components_ThemeContext__WEBPACK_IMPORTED_MODULE_17__.useTheme,\n        _hooks_useSleepTimer__WEBPACK_IMPORTED_MODULE_16__.useSleepTimer\n    ];\n});\n_c = MusicPlayerContent;\nfunction MusicPlayerApp() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AuthWrapper__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_hot_toast__WEBPACK_IMPORTED_MODULE_18__.Toaster, {\n                position: \"bottom-center\"\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 940,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MusicPlayerContent, {}, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 941,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/project/app/page.tsx\",\n        lineNumber: 939,\n        columnNumber: 5\n    }, this);\n}\n_c1 = MusicPlayerApp;\nvar _c, _c1;\n$RefreshReg$(_c, \"MusicPlayerContent\");\n$RefreshReg$(_c1, \"MusicPlayerApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/SleepTimerModal.tsx":
/*!****************************************!*\
  !*** ./components/SleepTimerModal.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Clock_Moon_Music_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Clock,Moon,Music,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/moon.js\");\n/* harmony import */ var _barrel_optimize_names_Clock_Moon_Music_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=Clock,Moon,Music,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/x.js\");\n/* harmony import */ var _barrel_optimize_names_Clock_Moon_Music_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Clock,Moon,Music,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/music.js\");\n/* harmony import */ var _barrel_optimize_names_Clock_Moon_Music_X_lucide_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=Clock,Moon,Music,X!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/clock.js\");\n/* harmony import */ var _components_ThemeContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ThemeContext */ \"(app-pages-browser)/./components/ThemeContext.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\nconst SleepTimerModal = (param)=>{\n    let { isOpen, onClose, onSetTimer, currentTimer } = param;\n    _s();\n    const { isDarkMode } = (0,_components_ThemeContext__WEBPACK_IMPORTED_MODULE_2__.useTheme)();\n    const [selectedOption, setSelectedOption] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    if (!isOpen) return null;\n    const timeOptions = [\n        5,\n        10,\n        15,\n        30,\n        45,\n        60\n    ];\n    const handleSetTimer = ()=>{\n        if (selectedOption !== null) {\n            onSetTimer(selectedOption);\n            onClose();\n        }\n    };\n    const handleCancelTimer = ()=>{\n        onSetTimer(null);\n        onClose();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"fixed inset-0 bg-black/50 z-50 flex items-center justify-center p-4\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"\".concat(isDarkMode ? \"bg-gray-800\" : \"bg-white\", \" rounded-lg p-6 w-full max-w-md\"),\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center justify-between mb-6\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex items-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Clock_Moon_Music_X_lucide_react__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                                    className: \"mr-2 text-purple-400\",\n                                    size: 24\n                                }, void 0, false, {\n                                    fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                                    lineNumber: 42,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                    className: \"text-2xl font-bold\",\n                                    children: \"Sleep Timer\"\n                                }, void 0, false, {\n                                    fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                                    lineNumber: 43,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                            lineNumber: 41,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: onClose,\n                            className: \"p-2 \".concat(isDarkMode ? \"hover:bg-gray-700\" : \"hover:bg-gray-100\", \" rounded-full transition-colors\"),\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Clock_Moon_Music_X_lucide_react__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                size: 20\n                            }, void 0, false, {\n                                fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                                lineNumber: 49,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                            lineNumber: 45,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                    lineNumber: 40,\n                    columnNumber: 9\n                }, undefined),\n                currentTimer && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mb-4 p-3 \".concat(isDarkMode ? \"bg-gray-700\" : \"bg-gray-100\", \" rounded-lg\"),\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm \".concat(isDarkMode ? \"text-gray-300\" : \"text-gray-600\"),\n                        children: [\n                            \"Current timer: \",\n                            typeof currentTimer === \"number\" ? \"\".concat(currentTimer, \" minutes\") : \"After current song\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                        lineNumber: 55,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                    lineNumber: 54,\n                    columnNumber: 11\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-3 mb-6\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setSelectedOption(\"after-song\"),\n                            className: \"w-full flex items-center p-4 rounded-lg border-2 transition-colors \".concat(selectedOption === \"after-song\" ? \"border-purple-500 bg-purple-500/10\" : isDarkMode ? \"border-gray-600 bg-gray-700 hover:bg-gray-600\" : \"border-gray-200 bg-gray-50 hover:bg-gray-100\"),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Clock_Moon_Music_X_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                    className: \"mr-3 text-purple-400\",\n                                    size: 20\n                                }, void 0, false, {\n                                    fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                                    lineNumber: 73,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"font-medium\",\n                                    children: \"After current song\"\n                                }, void 0, false, {\n                                    fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                                    lineNumber: 74,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                            lineNumber: 63,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid grid-cols-2 gap-3\",\n                            children: timeOptions.map((minutes)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                    onClick: ()=>setSelectedOption(minutes),\n                                    className: \"flex items-center justify-center p-4 rounded-lg border-2 transition-colors \".concat(selectedOption === minutes ? \"border-purple-500 bg-purple-500/10\" : isDarkMode ? \"border-gray-600 bg-gray-700 hover:bg-gray-600\" : \"border-gray-200 bg-gray-50 hover:bg-gray-100\"),\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Clock_Moon_Music_X_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                            className: \"mr-2 text-purple-400\",\n                                            size: 16\n                                        }, void 0, false, {\n                                            fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                                            lineNumber: 91,\n                                            columnNumber: 17\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"font-medium\",\n                                            children: [\n                                                minutes,\n                                                \" min\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                                            lineNumber: 92,\n                                            columnNumber: 17\n                                        }, undefined)\n                                    ]\n                                }, minutes, true, {\n                                    fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                                    lineNumber: 80,\n                                    columnNumber: 15\n                                }, undefined))\n                        }, void 0, false, {\n                            fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                            lineNumber: 78,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                    lineNumber: 61,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex space-x-3\",\n                    children: [\n                        currentTimer && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: handleCancelTimer,\n                            className: \"flex-1 \".concat(isDarkMode ? \"bg-gray-700 hover:bg-gray-600\" : \"bg-gray-200 hover:bg-gray-300\", \" py-3 rounded-lg font-medium transition-colors\"),\n                            children: \"Cancel Timer\"\n                        }, void 0, false, {\n                            fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                            lineNumber: 100,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: handleSetTimer,\n                            disabled: selectedOption === null,\n                            className: \"flex-1 bg-purple-500 hover:bg-purple-600 disabled:opacity-50 disabled:cursor-not-allowed text-white py-3 rounded-lg font-medium transition-colors\",\n                            children: \"Set Timer\"\n                        }, void 0, false, {\n                            fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                            lineNumber: 107,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/project/components/SleepTimerModal.tsx\",\n                    lineNumber: 98,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/home/project/components/SleepTimerModal.tsx\",\n            lineNumber: 39,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/home/project/components/SleepTimerModal.tsx\",\n        lineNumber: 38,\n        columnNumber: 5\n    }, undefined);\n};\n_s(SleepTimerModal, \"kvL4Akmmr71u4x14bsA/0Wao1xU=\", false, function() {\n    return [\n        _components_ThemeContext__WEBPACK_IMPORTED_MODULE_2__.useTheme\n    ];\n});\n_c = SleepTimerModal;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SleepTimerModal);\nvar _c;\n$RefreshReg$(_c, \"SleepTimerModal\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/SleepTimerModal.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./hooks/useSleepTimer.ts":
/*!********************************!*\
  !*** ./hooks/useSleepTimer.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSleepTimer: function() { return /* binding */ useSleepTimer; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useSleepTimer() {\n    const [sleepTimer, setSleepTimer] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [remainingTime, setRemainingTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const intervalRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onTimerEndRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const startTimer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((minutes, onTimerEnd)=>{\n        // Clear any existing timer\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n        }\n        setSleepTimer(minutes);\n        onTimerEndRef.current = onTimerEnd;\n        if (typeof minutes === \"number\") {\n            setRemainingTime(minutes);\n            intervalRef.current = setInterval(()=>{\n                setRemainingTime((prev)=>{\n                    if (prev === null || prev <= 1) {\n                        // Timer finished\n                        if (intervalRef.current) {\n                            clearInterval(intervalRef.current);\n                            intervalRef.current = null;\n                        }\n                        setSleepTimer(null);\n                        setRemainingTime(null);\n                        // Call the timer end callback\n                        if (onTimerEndRef.current) {\n                            onTimerEndRef.current();\n                        }\n                        return null;\n                    }\n                    return prev - 1;\n                });\n            }, 60000); // Update every minute\n        } else {\n            // 'after-song' mode\n            setRemainingTime(null);\n        }\n    }, []);\n    const cancelTimer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n            intervalRef.current = null;\n        }\n        setSleepTimer(null);\n        setRemainingTime(null);\n        onTimerEndRef.current = null;\n    }, []);\n    const triggerAfterSongTimer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (sleepTimer === \"after-song\" && onTimerEndRef.current) {\n            setSleepTimer(null);\n            setRemainingTime(null);\n            onTimerEndRef.current();\n            onTimerEndRef.current = null;\n        }\n    }, [\n        sleepTimer\n    ]);\n    // Cleanup on unmount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        return ()=>{\n            if (intervalRef.current) {\n                clearInterval(intervalRef.current);\n            }\n        };\n    }, []);\n    return {\n        sleepTimer,\n        remainingTime,\n        startTimer,\n        cancelTimer,\n        triggerAfterSongTimer,\n        isActive: sleepTimer !== null\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZVNsZWVwVGltZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlFO0FBRTFELFNBQVNJO0lBQ2QsTUFBTSxDQUFDQyxZQUFZQyxjQUFjLEdBQUdOLCtDQUFRQSxDQUErQjtJQUMzRSxNQUFNLENBQUNPLGVBQWVDLGlCQUFpQixHQUFHUiwrQ0FBUUEsQ0FBZ0I7SUFDbEUsTUFBTVMsY0FBY1AsNkNBQU1BLENBQXdCO0lBQ2xELE1BQU1RLGdCQUFnQlIsNkNBQU1BLENBQXNCO0lBRWxELE1BQU1TLGFBQWFSLGtEQUFXQSxDQUFDLENBQUNTLFNBQWdDQztRQUM5RCwyQkFBMkI7UUFDM0IsSUFBSUosWUFBWUssT0FBTyxFQUFFO1lBQ3ZCQyxjQUFjTixZQUFZSyxPQUFPO1FBQ25DO1FBRUFSLGNBQWNNO1FBQ2RGLGNBQWNJLE9BQU8sR0FBR0Q7UUFFeEIsSUFBSSxPQUFPRCxZQUFZLFVBQVU7WUFDL0JKLGlCQUFpQkk7WUFFakJILFlBQVlLLE9BQU8sR0FBR0UsWUFBWTtnQkFDaENSLGlCQUFpQlMsQ0FBQUE7b0JBQ2YsSUFBSUEsU0FBUyxRQUFRQSxRQUFRLEdBQUc7d0JBQzlCLGlCQUFpQjt3QkFDakIsSUFBSVIsWUFBWUssT0FBTyxFQUFFOzRCQUN2QkMsY0FBY04sWUFBWUssT0FBTzs0QkFDakNMLFlBQVlLLE9BQU8sR0FBRzt3QkFDeEI7d0JBQ0FSLGNBQWM7d0JBQ2RFLGlCQUFpQjt3QkFFakIsOEJBQThCO3dCQUM5QixJQUFJRSxjQUFjSSxPQUFPLEVBQUU7NEJBQ3pCSixjQUFjSSxPQUFPO3dCQUN2Qjt3QkFFQSxPQUFPO29CQUNUO29CQUNBLE9BQU9HLE9BQU87Z0JBQ2hCO1lBQ0YsR0FBRyxRQUFRLHNCQUFzQjtRQUNuQyxPQUFPO1lBQ0wsb0JBQW9CO1lBQ3BCVCxpQkFBaUI7UUFDbkI7SUFDRixHQUFHLEVBQUU7SUFFTCxNQUFNVSxjQUFjZixrREFBV0EsQ0FBQztRQUM5QixJQUFJTSxZQUFZSyxPQUFPLEVBQUU7WUFDdkJDLGNBQWNOLFlBQVlLLE9BQU87WUFDakNMLFlBQVlLLE9BQU8sR0FBRztRQUN4QjtRQUNBUixjQUFjO1FBQ2RFLGlCQUFpQjtRQUNqQkUsY0FBY0ksT0FBTyxHQUFHO0lBQzFCLEdBQUcsRUFBRTtJQUVMLE1BQU1LLHdCQUF3QmhCLGtEQUFXQSxDQUFDO1FBQ3hDLElBQUlFLGVBQWUsZ0JBQWdCSyxjQUFjSSxPQUFPLEVBQUU7WUFDeERSLGNBQWM7WUFDZEUsaUJBQWlCO1lBQ2pCRSxjQUFjSSxPQUFPO1lBQ3JCSixjQUFjSSxPQUFPLEdBQUc7UUFDMUI7SUFDRixHQUFHO1FBQUNUO0tBQVc7SUFFZixxQkFBcUI7SUFDckJKLGdEQUFTQSxDQUFDO1FBQ1IsT0FBTztZQUNMLElBQUlRLFlBQVlLLE9BQU8sRUFBRTtnQkFDdkJDLGNBQWNOLFlBQVlLLE9BQU87WUFDbkM7UUFDRjtJQUNGLEdBQUcsRUFBRTtJQUVMLE9BQU87UUFDTFQ7UUFDQUU7UUFDQUk7UUFDQU87UUFDQUM7UUFDQUMsVUFBVWYsZUFBZTtJQUMzQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2hvb2tzL3VzZVNsZWVwVGltZXIudHM/NjI0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VSZWYsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgZnVuY3Rpb24gdXNlU2xlZXBUaW1lcigpIHtcbiAgY29uc3QgW3NsZWVwVGltZXIsIHNldFNsZWVwVGltZXJdID0gdXNlU3RhdGU8bnVtYmVyIHwgJ2FmdGVyLXNvbmcnIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtyZW1haW5pbmdUaW1lLCBzZXRSZW1haW5pbmdUaW1lXSA9IHVzZVN0YXRlPG51bWJlciB8IG51bGw+KG51bGwpO1xuICBjb25zdCBpbnRlcnZhbFJlZiA9IHVzZVJlZjxOb2RlSlMuVGltZW91dCB8IG51bGw+KG51bGwpO1xuICBjb25zdCBvblRpbWVyRW5kUmVmID0gdXNlUmVmPCgoKSA9PiB2b2lkKSB8IG51bGw+KG51bGwpO1xuXG4gIGNvbnN0IHN0YXJ0VGltZXIgPSB1c2VDYWxsYmFjaygobWludXRlczogbnVtYmVyIHwgJ2FmdGVyLXNvbmcnLCBvblRpbWVyRW5kOiAoKSA9PiB2b2lkKSA9PiB7XG4gICAgLy8gQ2xlYXIgYW55IGV4aXN0aW5nIHRpbWVyXG4gICAgaWYgKGludGVydmFsUmVmLmN1cnJlbnQpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxSZWYuY3VycmVudCk7XG4gICAgfVxuXG4gICAgc2V0U2xlZXBUaW1lcihtaW51dGVzKTtcbiAgICBvblRpbWVyRW5kUmVmLmN1cnJlbnQgPSBvblRpbWVyRW5kO1xuXG4gICAgaWYgKHR5cGVvZiBtaW51dGVzID09PSAnbnVtYmVyJykge1xuICAgICAgc2V0UmVtYWluaW5nVGltZShtaW51dGVzKTtcbiAgICAgIFxuICAgICAgaW50ZXJ2YWxSZWYuY3VycmVudCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgc2V0UmVtYWluaW5nVGltZShwcmV2ID0+IHtcbiAgICAgICAgICBpZiAocHJldiA9PT0gbnVsbCB8fCBwcmV2IDw9IDEpIHtcbiAgICAgICAgICAgIC8vIFRpbWVyIGZpbmlzaGVkXG4gICAgICAgICAgICBpZiAoaW50ZXJ2YWxSZWYuY3VycmVudCkge1xuICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsUmVmLmN1cnJlbnQpO1xuICAgICAgICAgICAgICBpbnRlcnZhbFJlZi5jdXJyZW50ID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNldFNsZWVwVGltZXIobnVsbCk7XG4gICAgICAgICAgICBzZXRSZW1haW5pbmdUaW1lKG51bGwpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBDYWxsIHRoZSB0aW1lciBlbmQgY2FsbGJhY2tcbiAgICAgICAgICAgIGlmIChvblRpbWVyRW5kUmVmLmN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgb25UaW1lckVuZFJlZi5jdXJyZW50KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcHJldiAtIDE7XG4gICAgICAgIH0pO1xuICAgICAgfSwgNjAwMDApOyAvLyBVcGRhdGUgZXZlcnkgbWludXRlXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vICdhZnRlci1zb25nJyBtb2RlXG4gICAgICBzZXRSZW1haW5pbmdUaW1lKG51bGwpO1xuICAgIH1cbiAgfSwgW10pO1xuXG4gIGNvbnN0IGNhbmNlbFRpbWVyID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChpbnRlcnZhbFJlZi5jdXJyZW50KSB7XG4gICAgICBjbGVhckludGVydmFsKGludGVydmFsUmVmLmN1cnJlbnQpO1xuICAgICAgaW50ZXJ2YWxSZWYuY3VycmVudCA9IG51bGw7XG4gICAgfVxuICAgIHNldFNsZWVwVGltZXIobnVsbCk7XG4gICAgc2V0UmVtYWluaW5nVGltZShudWxsKTtcbiAgICBvblRpbWVyRW5kUmVmLmN1cnJlbnQgPSBudWxsO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgdHJpZ2dlckFmdGVyU29uZ1RpbWVyID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIGlmIChzbGVlcFRpbWVyID09PSAnYWZ0ZXItc29uZycgJiYgb25UaW1lckVuZFJlZi5jdXJyZW50KSB7XG4gICAgICBzZXRTbGVlcFRpbWVyKG51bGwpO1xuICAgICAgc2V0UmVtYWluaW5nVGltZShudWxsKTtcbiAgICAgIG9uVGltZXJFbmRSZWYuY3VycmVudCgpO1xuICAgICAgb25UaW1lckVuZFJlZi5jdXJyZW50ID0gbnVsbDtcbiAgICB9XG4gIH0sIFtzbGVlcFRpbWVyXSk7XG5cbiAgLy8gQ2xlYW51cCBvbiB1bm1vdW50XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGlmIChpbnRlcnZhbFJlZi5jdXJyZW50KSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxSZWYuY3VycmVudCk7XG4gICAgICB9XG4gICAgfTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiB7XG4gICAgc2xlZXBUaW1lcixcbiAgICByZW1haW5pbmdUaW1lLFxuICAgIHN0YXJ0VGltZXIsXG4gICAgY2FuY2VsVGltZXIsXG4gICAgdHJpZ2dlckFmdGVyU29uZ1RpbWVyLFxuICAgIGlzQWN0aXZlOiBzbGVlcFRpbWVyICE9PSBudWxsXG4gIH07XG59Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlRWZmZWN0IiwidXNlUmVmIiwidXNlQ2FsbGJhY2siLCJ1c2VTbGVlcFRpbWVyIiwic2xlZXBUaW1lciIsInNldFNsZWVwVGltZXIiLCJyZW1haW5pbmdUaW1lIiwic2V0UmVtYWluaW5nVGltZSIsImludGVydmFsUmVmIiwib25UaW1lckVuZFJlZiIsInN0YXJ0VGltZXIiLCJtaW51dGVzIiwib25UaW1lckVuZCIsImN1cnJlbnQiLCJjbGVhckludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJwcmV2IiwiY2FuY2VsVGltZXIiLCJ0cmlnZ2VyQWZ0ZXJTb25nVGltZXIiLCJpc0FjdGl2ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useSleepTimer.ts\n"));

/***/ })

});